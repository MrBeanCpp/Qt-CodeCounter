软件设计实际需要考虑的问题：
假设有以下场景：
    你需要得到某一文件夹下所有子文件的列表(包含子文件夹内文件)，例如代码统计器

你有以下方法:
1.使用C标准库中的popen()函数开启cmd进程传入dir命令并从其标准输出读出文件列表，(进程间管道)
    [但有控制台弹出，影响交互]

2.使用Windows API —— ShellExecute()开启cmd进程传入dir命令并将结果重定向输出到文件，父进程读取文件，(将磁盘文件作为中转站)
    [可利用HIDE标志隐藏弹窗，但频繁I/O，降低性能]

3.使用Qt提供的API —— QProcess，开启cmd进程并传入dir命令并从其标准输出读出文件列表，(类似管道)
    [无弹窗，但由于QProcess没有提供HIDE标志，担心其稳定性]

4.使用Windows API —— (CreateProcess() + CreatePip())，(开启外部进程cmd + 建立管道通信)
    [自定义程度高，但难写得一匹，码量巨大]

5.使用Windows API —— (FindFirstFile、FindNextFile)递归(或栈)遍历, (不开启新进程)
    [有一丁丁麻烦 + 爆栈风险]

6.使用Qt API —— QDirIterator 枚举文件，卧槽，香得一匹，怎么不早说, (不开启新进程)