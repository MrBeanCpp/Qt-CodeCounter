//预定义
typedef enum _WINDOWCOMPOSITIONATTRIB {
    WCA_UNDEFINED = 0,
    WCA_NCRENDERING_ENABLED = 1,
    WCA_NCRENDERING_POLICY = 2,
    WCA_TRANSITIONS_FORCEDISABLED = 3,
    WCA_ALLOW_NCPAINT = 4,
    WCA_CAPTION_BUTTON_BOUNDS = 5,
    WCA_NONCLIENT_RTL_LAYOUT = 6,
    WCA_FORCE_ICONIC_REPRESENTATION = 7,
    WCA_EXTENDED_FRAME_BOUNDS = 8,
    WCA_HAS_ICONIC_BITMAP = 9,
    WCA_THEME_ATTRIBUTES = 10,
    WCA_NCRENDERING_EXILED = 11,
    WCA_NCADORNMENTINFO = 12,
    WCA_EXCLUDED_FROM_LIVEPREVIEW = 13,
    WCA_VIDEO_OVERLAY_ACTIVE = 14,
    WCA_FORCE_ACTIVEWINDOW_APPEARANCE = 15,
    WCA_DISALLOW_PEEK = 16,
    WCA_CLOAK = 17,
    WCA_CLOAKED = 18,
    WCA_ACCENT_POLICY = 19,
    WCA_FREEZE_REPRESENTATION = 20,
    WCA_EVER_UNCLOAKED = 21,
    WCA_VISUAL_OWNER = 22,
    WCA_LAST = 23
} WINDOWCOMPOSITIONATTRIB;

typedef struct _WINDOWCOMPOSITIONATTRIBDATA {
    WINDOWCOMPOSITIONATTRIB Attrib;
    PVOID pvData;
    SIZE_T cbData;
} WINDOWCOMPOSITIONATTRIBDATA;

typedef enum _ACCENT_STATE {
    ACCENT_ENABLE_GRADIENT = 1,
    ACCENT_ENABLE_TRANSPARENTGRADIENT = 2,
    ACCENT_ENABLE_BLURBEHIND = 3,
    ACCENT_ENABLE_ACRYLICBLURBEHIND = 4,
    ACCENT_INVALID_STATE = 5,
} ACCENT_STATE;

typedef struct _ACCENT_POLICY {
    ACCENT_STATE AccentState;
    DWORD AccentFlags;
    DWORD GradientColor;
    DWORD AnimationId;
} ACCENT_POLICY;

typedef BOOL(WINAPI* pfnSetWindowCompositionAttribute)(HWND, WINDOWCOMPOSITIONATTRIBDATA*);


//**************************************************************************************
    //setAttribute(Qt::WA_TranslucentBackground);//加上这句使得客户区也生效
    HWND hWnd = HWND(winId());
    HMODULE hUser = GetModuleHandle(L"user32.dll");
    if (hUser) {
        pfnSetWindowCompositionAttribute setWindowCompositionAttribute = (pfnSetWindowCompositionAttribute)GetProcAddress(hUser, "SetWindowCompositionAttribute");
        if (setWindowCompositionAttribute) {
            ACCENT_POLICY accent = { ACCENT_ENABLE_BLURBEHIND, 0, 0, 0 };//ACCENT_ENABLE_ACRYLICBLURBEHIND亚克力效果，与第三个参数配合使用，但卡得一批
            WINDOWCOMPOSITIONATTRIBDATA data;
            data.Attrib = WCA_ACCENT_POLICY;
            data.pvData = &accent;
            data.cbData = sizeof(accent);
            setWindowCompositionAttribute(hWnd, &data);
        }
    }

    setWindowFlags(Qt::FramelessWindowHint); //与Qt::WA_NoSystemBackground一起用 否则Windows报错
    setAttribute(Qt::WA_NoSystemBackground); //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //直接paintEvent Draw 透明背景 （覆盖在磨砂效果上）,设置控件透明背景

//***************************************************************************************
(17条消息) 使用 SetWindowCompositionAttribute 来控制程序的窗口边框和背景（可以做 Acrylic 亚克力效果、模糊效果、主题色效果等）_walterlv - 吕毅-CSDN博客
https://walterlv.blog.csdn.net/article/details/103268596

调用未公开API SetWindowCompositionAttribute 在Win10下开启Aero - 程序园
http://www.voidcn.com/article/p-oimykome-oz.html

在 Windows 10 上为 WPF 窗口添加模糊特效（就像开始菜单和操作中心那样） - walterlv
http://blog.walterlv.com/post/win10/2017/10/02/wpf-transparent-blur-in-windows-10.html#%E9%99%84%E5%B0%81%E8%A3%85%E5%A5%BD%E7%9A%84-api-%E4%BB%A3%E7%A0%81

Walterlv.Packages/WindowAccentCompositor.cs at master · walterlv/Walterlv.Packages · GitHub
https://github.com/walterlv/Walterlv.Packages/blob/master/src/Themes/Walterlv.Themes.FluentDesign/Effects/WindowAccentCompositor.cs

(17条消息) 在 WPF 程序中应用 Windows 10 真•亚克力效果_walterlv - 吕毅-CSDN博客
https://walterlv.blog.csdn.net/article/details/103760646

(17条消息) Qt Win 10窗口毛玻璃效果_番茄啊的博客-CSDN博客_qt win10风格
https://blog.csdn.net/qq_40110291/article/details/98873946